syntax = "proto3";
package influxdata.iox.namespace.v1;
option go_package = "github.com/influxdata/iox/namespace/v1";

service NamespaceService {
  // Get all namespaces
  rpc GetNamespaces(GetNamespacesRequest) returns (GetNamespacesResponse);

  // Create a namespace
  rpc CreateNamespace(CreateNamespaceRequest) returns (CreateNamespaceResponse);

  // Delete a namespace
  rpc DeleteNamespace(DeleteNamespaceRequest) returns (DeleteNamespaceResponse);

  // Update retention period
  rpc UpdateNamespaceRetention(UpdateNamespaceRetentionRequest) returns (UpdateNamespaceRetentionResponse);
}

message GetNamespacesRequest {
}

message GetNamespacesResponse {
  repeated Namespace namespaces = 1;
}

message CreateNamespaceRequest {
  // Name of the namespace to be created
  string name = 1;

  // Retention period in nanoseconds.
  //
  // NULL means "infinite retention", and 0 is mapped to NULL. Negative values
  // are rejected.
  optional int64 retention_period_ns = 2;
}

message CreateNamespaceResponse {
  Namespace namespace = 1;
}

message DeleteNamespaceRequest {
  // Name of the namespace to be deleted
  string name = 1;
}

message DeleteNamespaceResponse {
}

message UpdateNamespaceRetentionRequest {
  // Name of the namespace to be set
  string name = 1;

  // Retention period in nanoseconds.
  //
  // NULL means "infinite retention", and 0 is mapped to NULL. Negative values
  // are rejected.
  optional int64 retention_period_ns = 2;
}

message UpdateNamespaceRetentionResponse {
  Namespace namespace = 1;
}

message Namespace {
  // Namespace ID
  int64 id = 1;

  // Name of the Namespace
  string name = 2;

  // Retention period in nanoseconds.
  //
  // NULL means "infinite retention".
  optional int64 retention_period_ns = 3;
}

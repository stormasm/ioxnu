syntax = "proto3";
package influxdata.iox.catalog.v1;
option go_package = "github.com/influxdata/iox/catalog/v1";

import "influxdata/iox/catalog/v1/parquet_file.proto";

service CatalogService {
    // Get the parquet_file catalog records in the given partition
    rpc GetParquetFilesByPartitionId(GetParquetFilesByPartitionIdRequest) returns (GetParquetFilesByPartitionIdResponse);

    // Get the partition catalog records by the table id
    rpc GetPartitionsByTableId(GetPartitionsByTableIdRequest) returns (GetPartitionsByTableIdResponse);

    // Get the parquet_file catalog records in the given namespace and table name
    rpc GetParquetFilesByNamespaceTable(GetParquetFilesByNamespaceTableRequest) returns (GetParquetFilesByNamespaceTableResponse);

    // Get the parquet_file catalog records in the given namespace
    rpc GetParquetFilesByNamespace(GetParquetFilesByNamespaceRequest) returns (GetParquetFilesByNamespaceResponse);
}

message GetParquetFilesByPartitionIdRequest {
    // the partition id
    int64 partition_id = 1;
}

message GetParquetFilesByPartitionIdResponse {
    // the parquet_file records in the partition
    repeated ParquetFile parquet_files = 1;
}

message Partition {
    reserved 5;
    reserved "sort_key";
    reserved 2;
    reserved "sequencer_id";
    reserved 7;
    reserved "shard_id";

    // the partition id
    int64 id = 1;
    // the table id the partition is in
    int64 table_id = 3;
    // the partition key
    string key = 4;
    // the sort key for data in parquet files in the partition
    repeated string array_sort_key = 6;
}

message GetPartitionsByTableIdRequest {
    int64 table_id = 1;
}

message GetPartitionsByTableIdResponse {
    repeated Partition partitions = 1;
}

message GetParquetFilesByNamespaceTableRequest {
    // the namespace name
    string namespace_name = 1;

    // the table name in the namespace
    string table_name = 2;
}

message GetParquetFilesByNamespaceTableResponse {
    // the parquet_file records in the table in the namespace
    repeated ParquetFile parquet_files = 1;
}

message GetParquetFilesByNamespaceRequest {
    // the namespace name
    string namespace_name = 1;
}

message GetParquetFilesByNamespaceResponse {
    // the parquet_file records in the namespace
    repeated ParquetFile parquet_files = 1;
}
